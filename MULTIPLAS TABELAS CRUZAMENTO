# Tabela 1
df1 = glueContext.create_dynamic_frame.from_catalog(
    database="db_corp_juridico_esteiradofuturo_sor_01",
    table_name="tbex3861_itgr_resu_qstr_jgle",
    push_down_predicate="data_coluna >= '2025-01-01' AND data_coluna < '2025-04-01'",
    transformation_ctx="df1"
)

# Tabela 2
df2 = glueContext.create_dynamic_frame.from_catalog(
    database="db_corp_juridico_esteiradofuturo_sor_01",
    table_name="outra_tabela",
    push_down_predicate="data_coluna >= '2025-01-01' AND data_coluna < '2025-04-01'",
    transformation_ctx="df2"
)

df1_spark = df1.toDF()
df2_spark = df2.toDF()



FAZER JOIN 

from pyspark.sql import functions as F

df_join = (
    df1.alias("a")
    .join(df2.alias("b"), F.col("a.id") == F.col("b.id"), "inner")
    .select(
        F.col("a.id"),
        F.col("a.nome"),
        F.col("b.status"),
        F.col("b.data_criacao")
    )
)
--------------------------------------------------------------------------------

UNION ALL NO PYSPARK PRECISA TER OS NOMES E TIPO DE DADOS IGUAIS NAS COLUNAS


df1_sel = df1.select(
    F.col("id_cliente").alias("id"),
    F.col("nome"),
    F.col("valor_total").alias("valor")
)

df2_sel = df2.select(
    F.col("id"),
    F.col("nome"),
    F.col("valor")
)

df_union = df1_sel.union(df2_sel)
